<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        9/9zx/X/bcP0/2m98f9juO7/Ybrt/yJW1P8TPM3/F0DP/xhAz/8ZPc//E0HO/xRrzv8Jhcr/AH7I/wZ5
        rf8bb3r/AIDK/wB6vuwAUoCJAAAAQQAAADEAAAAZAAAABgAAAAAAAAAAAAAAAAAAABAAdsb/6Pr//5rV
        /f84eNz/GEzK/xpPy/8aTcv/N3fa/2K27v9guO3/WLHp/yhi1/8ML8z/DjHN/w0vzf8kXtX/RJ/e/0Og
        3/8yl9r/G3eQ/wN8t/8Af8j/AIDH/wCAxv8AfsX/AG2qwwAbK0EAAAARAAAAAAAAAAAAAAAAAAAACABz
        usOT0O3/karp/xFFy/8bT83/HVHO/x1Qzv8aTM3/KmPT/2G67f9bs+r/WLPp/1ez5/9TsuX/Tq3j/0mo
        4P9Do97/P57d/zyb3P85mdz/N5fa/yiQ0/8Ngsn/AHvD/wai5v8Dktn/AH7F/wAAABYAAAAAAAAAAAAA
        AAAAAAACAGmnaUGl2P+/x/H/GEnO/xhLzv8cTs//HE7P/xpLzv8UQcz/Yrzu/1mx6f9Vref/Uqvl/06p
        4/9LqOL/SKfg/0Sm3/9Ao97/PZ/c/zib2f80l9f/MZTW/yJ6xv8FTKv/Dazu/w6p7P8AfcT/AAAAFgAA
        AAAAAAAAAAAAAAAAAAAAAAAQAHvD/7W78P9Gadn/E0PN/xhHz/8ZSM//F0XO/xE7zP9jve7/WbHr/1Ss
        6f9Rqeb/T6rk/0ml4f8tcNT/HlHN/x9Szf8fUc7/KW3S/zKW1v8xltb/GW2+/wdjvP8Mqu3/Dajr/wB9
        xP8AAAAVAAAAAAAAAAAAAAAAAAAAAAAAAAgAd7rDcZrh/3KI4v8LOcz/E0DO/xM/zv8QOs3/IlbU/2G7
        8f9ZtPP/Va/w/1Kr6f9QreX/JmDS/xxNzf8eUc//H1LP/x9Rz/8eTs7/Il/R/zKa1/8QW7b/CH/P/xGq
        7P8Npej/AH3E/wAAABEAAAAAAAAAAAAAAAAAAAAAAAAAAgBqp2k6n9b/s8Tz/wcty/8GLcv/CCzL/y1l
        2v9ht+//X7r2/0xxSP9KcEj/U67u/1Kw5v8WQ8z/G0zO/xxOz/8cTs//HE7P/xxMz/8bSM//MJjV/wZK
        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
</value>
  </data>
</root>